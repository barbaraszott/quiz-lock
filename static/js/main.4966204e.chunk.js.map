{"version":3,"sources":["Value.js","Lock.js","quiz.js","CustomizeQuiz.js","QuizSummary.js","App.js","serviceWorker.js","index.js"],"names":["Value","_this","this","react_default","a","createElement","className","onClick","props","index","currentValue","Component","Lock","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeValue","newValues","state","currentInput","map","value","i","setState","componentDidUpdate","prevProps","question","Array","fill","_this2","_this$props","isLongQuestion","checkAnswer","userAnswer","join","Fragment","src_Value_0","key","quiz","answer","CustomizeQuiz","_Component","apply","arguments","inherits","createClass","QuizSummary","correctAnswers","questionsCount","quizSet","redo","again","length","includes","App","createQuizSet","shuffleArray","slice","prepareFirstQuestion","firstQuestion","questionIndex","quizFinished","customizeQuiz","nextQuestion","concat","toConsumableArray","renderQuizContent","src_QuizSummary_0","src_Lock_0","src_CustomizeQuiz_0","array","shuffledArray","from","currentIndex","randomIndex","Math","floor","random","_ref","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4966204e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Value.scss';\r\n\r\nclass Value extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"lock-combination_value\" onClick={() => this.props.onClick(this.props.index)}>\r\n\t\t\t\t<span>{this.props.currentValue}</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nValue.propTypes = {\r\n\tcurrentValue : PropTypes.number\r\n};\r\n\r\nexport default Value;\r\n","import React, { Component } from 'react';\r\nimport Value from './Value';\r\nimport PropTypes from 'prop-types';\r\nimport './Lock.scss';\r\n\r\nclass Lock extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentInput : [\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\t0\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n\r\n\tchangeValue = (index) => {\r\n\t\tconst newValues = this.state.currentInput.map((value, i) => {\r\n\t\t\tif (i === index) {\r\n\t\t\t\treturn value === 9 ? 0 : ++value;\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tcurrentInput : newValues\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentDidUpdate = (prevProps) => {\r\n\t\tif (this.props.question !== prevProps.question) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentInput : new Array(4).fill(0)\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { isLongQuestion, question, checkAnswer } = this.props;\r\n\t\tconst userAnswer = this.state.currentInput.join('');\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<h1 className={`question ` + isLongQuestion()}>{question}</h1>\r\n\t\t\t\t{/* <div className=\"lock\"> */}\r\n\t\t\t\t<div className=\"lock-combination\">\r\n\t\t\t\t\t{this.state.currentInput.map((value, i) => (\r\n\t\t\t\t\t\t<Value currentValue={value} key={i} index={i} onClick={this.changeValue} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"lock-buttons\">\r\n\t\t\t\t\t{/* <div className=\"next-btn\" onClick={() => this.props.checkAnswer(this.state.currentInput.join(''))} /> */}\r\n\r\n\t\t\t\t\t<button className=\"next-btn\" onClick={() => checkAnswer(userAnswer)}>\r\n\t\t\t\t\t\tNext\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* </div> */}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nLock.propTypes = {\r\n\tcheckAnswer    : PropTypes.func,\r\n\tquestion       : PropTypes.string,\r\n\tisLongQuestion : PropTypes.func,\r\n\tonClick        : PropTypes.func\r\n};\r\n\r\nexport default Lock;\r\n","const quiz = [\r\n\t{\r\n\t\tquestion : 'First four numbers of Fibbonacci sequence are..?',\r\n\t\tanswer   : '1123'\r\n\t},\r\n\t{\r\n\t\tquestion : \"How long is  a girraffe's tongue? [cm]\",\r\n\t\tanswer   : '0045'\r\n\t},\r\n\t{\r\n\t\tquestion : 'In what year did Titanic sink?',\r\n\t\tanswer   : '1912'\r\n\t},\r\n\t{\r\n\t\tquestion : 'In what year Apollo 11 landed on the Moon?',\r\n\t\tanswer   : '1969'\r\n\t},\r\n\t{\r\n\t\tquestion : 'First four digits after the decimal of PI are..?',\r\n\t\tanswer   : '1415'\r\n\t},\r\n\t{\r\n\t\tquestion : 'How many bones compose human body at birth?',\r\n\t\tanswer   : '0270'\r\n\t},\r\n\t{\r\n\t\tquestion : 'What was the duration of Calhoun experiment (behavioral sink)? [days]',\r\n\t\tanswer   : '1588'\r\n\t},\r\n\t{\r\n\t\tquestion : 'What is the first prime number?',\r\n\t\tanswer   : '0002'\r\n\t},\r\n\t{\r\n\t\tquestion : `First four digits after the decimal of Euler's number`,\r\n\t\tanswer   : '7182'\r\n\t},\r\n\t{\r\n\t\tquestion : 'How many websites existed in 1991?',\r\n\t\tanswer   : '0001'\r\n\t},\r\n\t{\r\n\t\tquestion : 'For how many hours total each day (statistically) crocodiles keep both eyes closed?',\r\n\t\tanswer   : '0017'\r\n\t},\r\n\t{\r\n\t\tquestion : 'In what year John Ronald Reuel Tolkien was born?',\r\n\t\tanswer   : '1892'\r\n\t},\r\n\t{\r\n\t\tquestion : 'What was the number of the last Apollo mission?',\r\n\t\tanswer   : '0017'\r\n\t},\r\n\t{\r\n\t\tquestion :\r\n\t\t\t'In what year famous book of the astronomer Nicolaus Copernicus - De revolutionibus orbium coelestium (On the Revolutions of the Heavenly Spheres) - was first printed?',\r\n\t\tanswer   : '1543'\r\n\t},\r\n\t{\r\n\t\tquestion : 'How high is the Matterhorn? [m]',\r\n\t\tanswer   : '4478'\r\n\t}\r\n];\r\n\r\nexport default quiz;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './CustomizeQuiz.scss';\r\n\r\nexport class CustomizeQuiz extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<h1>Hello! How many questions do You want to have in this quiz?</h1>\r\n\t\t\t\t<div className=\"customize\">\r\n\t\t\t\t\t<button className=\"customize-button\" onClick={() => this.props.onClick(5)}>\r\n\t\t\t\t\t\t5\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"customize-button\" onClick={() => this.props.onClick(10)}>\r\n\t\t\t\t\t\t10\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"customize-button\" onClick={() => this.props.onClick(15)}>\r\n\t\t\t\t\t\t15\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nCustomizeQuiz.propTypes = {\r\n\tonClick : PropTypes.func\r\n};\r\n\r\nexport default CustomizeQuiz;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './QuizSummary.scss';\r\n\r\nclass QuizSummary extends Component {\r\n\trender() {\r\n\t\tconst { correctAnswers, questionsCount, quizSet, redo, again } = this.props;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<h1>Congrats!</h1>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>Questions in this quiz were:</h2>\r\n\t\t\t\t\t<ul className=\"fa-ul summary-answers\">\r\n\t\t\t\t\t\t{quizSet.map((quiz, i) => (\r\n\t\t\t\t\t\t\t<li key={i}>\r\n\t\t\t\t\t\t\t\t<span className=\"fa-li\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\tcorrectAnswers.length && correctAnswers.includes(i) ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t'fas fa-check-circle correct'\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t'fas fa-times-circle incorrect'\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t{quiz.question}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<p className=\"text-with-border\">\r\n\t\t\t\t\t\tScore: {correctAnswers.length} / {questionsCount}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"again\">\r\n\t\t\t\t\t<button className=\"again-btn\" onClick={redo}>\r\n\t\t\t\t\t\tTry again with the same questions\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"again-btn\" onClick={again}>\r\n\t\t\t\t\t\tAnother!\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nQuizSummary.propTypes = {\r\n\tcorrectAnswers : PropTypes.array,\r\n\tquestionsCount : PropTypes.number,\r\n\tquizSet        : PropTypes.array,\r\n\tredo           : PropTypes.func,\r\n\tagain          : PropTypes.func\r\n};\r\n\r\nexport default QuizSummary;\r\n","import React from 'react';\r\n// import './App.css';\r\nimport './App.scss';\r\nimport Lock from './Lock';\r\nimport quiz from './quiz';\r\nimport CustomizeQuiz from './CustomizeQuiz';\r\nimport QuizSummary from './QuizSummary';\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tquestionsCount : null,\r\n\t\t\tquestionIndex  : 0,\r\n\t\t\tquizSet        : null,\r\n\t\t\tquestion       : null,\r\n\t\t\tanswer         : null,\r\n\t\t\tcorrectAnswers : [],\r\n\t\t\tquizFinished   : false\r\n\t\t};\r\n\t}\r\n\r\n\tshuffleArray(array) {\r\n\t\t// Fisher–Yates shuffle\r\n\r\n\t\tconst shuffledArray = Array.from(array);\r\n\r\n\t\tfor (let currentIndex = shuffledArray.length - 1; currentIndex > 0; currentIndex--) {\r\n\t\t\tlet randomIndex = Math.floor(Math.random() * (currentIndex + 1)); // random index from 0 to i\r\n\t\t\t[\r\n\t\t\t\tshuffledArray[currentIndex],\r\n\t\t\t\tshuffledArray[randomIndex]\r\n\t\t\t] = [\r\n\t\t\t\tshuffledArray[randomIndex],\r\n\t\t\t\tshuffledArray[currentIndex]\r\n\t\t\t]; // swap elements\r\n\t\t}\r\n\r\n\t\treturn shuffledArray;\r\n\t}\r\n\r\n\tcreateQuizSet = (quiz, questionsCount) => this.shuffleArray(quiz).slice(0, questionsCount);\r\n\r\n\tprepareFirstQuestion = (quizSet) => {\r\n\t\tconst firstQuestion = quizSet[0];\r\n\r\n\t\tthis.setState({\r\n\t\t\tquizSet,\r\n\t\t\tquestionsCount : quizSet.length,\r\n\t\t\tquestion       : firstQuestion.question,\r\n\t\t\tanswer         : firstQuestion.answer,\r\n\t\t\tquestionIndex  : 0,\r\n\t\t\tcorrectAnswers : [],\r\n\t\t\tquizFinished   : false\r\n\t\t});\r\n\t};\r\n\r\n\tcustomizeQuiz = (questionsCount) => {\r\n\t\tconst quizSet = this.createQuizSet(quiz, questionsCount);\r\n\r\n\t\tthis.prepareFirstQuestion(quizSet);\r\n\t};\r\n\r\n\tnextQuestion = (quizSet) => {\r\n\t\tconst currentQuestionIndex = this.state.questionIndex;\r\n\t\tconst questionIndex = currentQuestionIndex + 1;\r\n\r\n\t\tif (questionIndex < quizSet.length) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tquestionIndex,\r\n\t\t\t\tquestion      : quizSet[questionIndex].question,\r\n\t\t\t\tanswer        : quizSet[questionIndex].answer\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tquizFinished : true\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tcheckAnswer = (userAnswer) => {\r\n\t\tif (userAnswer === this.state.answer) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcorrectAnswers : [\r\n\t\t\t\t\t...this.state.correctAnswers,\r\n\t\t\t\t\tthis.state.questionIndex\r\n\t\t\t\t]\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.nextQuestion(this.state.quizSet);\r\n\t};\r\n\r\n\tagain = () => {\r\n\t\tthis.setState({\r\n\t\t\tquestionsCount : null,\r\n\t\t\tquizFinished   : false\r\n\t\t});\r\n\t};\r\n\r\n\tredo = () => {\r\n\t\tconst quizSet = this.shuffleArray(this.state.quizSet);\r\n\r\n\t\tthis.prepareFirstQuestion(quizSet);\r\n\t};\r\n\r\n\tisLongQuestion = () => (this.state.question.length > 100 ? 'question-long' : '');\r\n\r\n\trenderQuizContent = () => {\r\n\t\tif (this.state.quizFinished) {\r\n\t\t\treturn (\r\n\t\t\t\t<QuizSummary\r\n\t\t\t\t\tcorrectAnswers={this.state.correctAnswers}\r\n\t\t\t\t\tquestionsCount={this.state.questionsCount}\r\n\t\t\t\t\tquizSet={this.state.quizSet}\r\n\t\t\t\t\tredo={this.redo}\r\n\t\t\t\t\tagain={this.again}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (!this.state.questionsCount) {\r\n\t\t\treturn <CustomizeQuiz onClick={this.customizeQuiz} />;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Lock\r\n\t\t\t\tcheckAnswer={this.checkAnswer}\r\n\t\t\t\tquestion={this.state.question}\r\n\t\t\t\tisLongQuestion={this.isLongQuestion}\r\n\t\t\t\tonClick={this.again}\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn <div className=\"app-container\">{this.renderQuizContent()}</div>;\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}